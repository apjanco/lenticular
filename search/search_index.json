{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Get Started","text":"<p>We often work with partners who have materials stored in cloud services like Google Drive and Box.  This is a library for accessing those materials. This allows partners to use familiar technologies to manage their data, while developers can fetch and normalize data for projects. </p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install lenticular\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<ol> <li> <p>Set API keys for Drive and/or Box</p> </li> <li> <p>Create a project and set the file policies.</p> </li> <li> <p>Google Drive  </p> <p><code>$ lenticular drive-download 1R8JA-C_QxSdekKfRfetj5j4fbjFXJu6G</code> or <pre><code>from lenticular.drive import Drive \n\ndrive = Drive() \n\ndrive.download_folder('1R8JA-C_QxSdekKfRfetj5j4fbjFXJu6G')\n</code></pre></p> <p>more on Drive</p> </li> <li> <p>Box </p> <p><code>$ lenticular box-download 160107962928</code> or <pre><code>from lenticular.box import Box\n\nclient = Box() \n\nclient.download_folder('160107962928')\n</code></pre></p> <p>more on Box</p> </li> </ol>"},{"location":"box/","title":"Box","text":"<p>This is how to use the Box side of things </p>"},{"location":"datasets/","title":"Datasets","text":"<p>All about datasets!</p>"},{"location":"drive/","title":"Drive","text":"<p>Instructions on the Drive side of the house</p>"},{"location":"normalization/","title":"Normalization","text":"<p>All about the normalization!</p>"},{"location":"policies/","title":"Policies","text":"<pre><code>$ lenticular policies\n</code></pre> <p>Lenticular is set up to manage files for large projects. This assumes that you'll have hundreds or thousands of files  that need to be fetched from the cloud, processed and published as a dataset. </p> <p>The policies file allows you to set rules that can be applied to the entire collection. For example, what is the maxiumum file size? If you set <code>image.output_size</code> to 4Mb, then all image files will be resized to less than the limit. If you want all jpg or png files for the web, the policy rules will convert all formats to your preferred file types. </p> <p>To configure your project and define its policies, enter <code>$ lenticular policies</code> and follow the prompts.</p> <p>With the policies saved, you can now download and  normalize the files. </p> <p>More on file format and filename standards - https://developer.mozilla.org/en-US/docs/Web/Media/Formats - https://guides.library.upenn.edu/datamgmt/fileorg</p>"},{"location":"secrets/","title":"Secrets","text":"<pre><code>$ lenticular secrets\n</code></pre> <p>To access Drive and/or Box, you will need credentials to prove that you have permission to access files on those services. I'll refer to these as secrets.  You will need to go into Box and Drive to gain the necessary credentials.  Once you have them, you can add them to lenticular's settings with this command:  </p> <p>This command will prompt you to enter several values and will check for a <code>credentials.json</code> file which is required to access Drive. </p>"},{"location":"secrets/#drive-credentials","title":"Drive credentials","text":"<p>To generate a <code>credentials.json</code> file, follow these instructions from Google. When you download the credentials file, it should look something like this inside:</p> <pre><code>{\n\"installed\":\n{\n\"client_id\":\"8944032.apps.googleusercontent.com\",\n\"project_id\":\"project-234812\",\n\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\n\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_secret\":\"GOCSP-Ztr45L-q6iqb7\",\"\n            redirect_uris\":[\"http://localhost\"]\n}\n}\n</code></pre> <p>Open the file in a text editor and copy the contents.  When you run <code>lenticular secrets</code>, you'll be prompted to paste the contents into the terminal.  Your data will be saved as a <code>credentials.json</code> file. When you run <code>lenticular drive-download &lt;folder id&gt;</code> for the first time, a login page will open in your browser.  Log in as you normally would with Google and the press \"continue.\" That is all you need to access files and folders that you own or have been shared with you on Google Drive.  </p>"},{"location":"secrets/#box-credentials","title":"Box credentials","text":"<p>Box requires a similar set of tokens to authenticate with the Box API. If you know the managers of your enterprise Box service, it's always a good idea to say \"hello\" and let them know why you need access and what you plan to do with the data. Only they can authorize an app, so you'll need their help.  In the meantime, you can get a temporary developer key that will do the job. </p> <ol> <li>Go to this page to create a new oauth application</li> <li>Create a new Box app, and click on \"Create an App +\"</li> <li>You'll then need to log in with your Pennkey</li> <li>Grant access to box in the popup </li> <li>You can now enter a name for your app, and click \"Create App\"</li> <li>Head over to the Developer Console and find your app in the \"My Apps\" section.</li> <li>Click on the card for you project and then open the \"Configuration\" tab. </li> <li>In the section for \"OAuth 2.0 Credentials,\" you'll see values for Client ID and Client Secret.  When you run <code>lenticular secrets</code> you'll be asked for three secrets.  The <code>BOX_CLIENT_ID</code> is the value you see as Client ID.  <code>BOX_CLIENT_SECRET</code> is Client Secret.</li> <li>Finally, <code>BOX_DEVELOPER_TOKEN</code> can be found in the \"Developer Token\" section, just above the \"OAuth 2.0 Credentials\" section. You may need to click on a blue \"Generate Developer Token\" button. Note that this token is only valid for 60 minutes. When it runs out, you can get a new developer token by refreshing the page and clicking the blue button again once the hour has passed. </li> </ol> <p>Once you've set the credentials with <code>lenticular secrets</code> you can now access all your file in Drive of Box and download them to your local computer.</p> <p>To continue, go to either the Box or Drive page. </p>"},{"location":"workflow/","title":"Workflow","text":""},{"location":"workflow/#import","title":"Import","text":"<pre><code>flowchart TB\n    a(\"Google Drive\") --&gt; b(\"Lenticular\")\n    e(\"Box\")--&gt; b(\"Lenticular\")\n    b(\"Lenticular\") --&gt; c(\"HuggingFace Hub\")\n    b(\"Lenticular\") --&gt; d(\"Digital Ocean Spaces\")</code></pre> Download <ul><li>Configure project, update settings.yml</li> <li>Download all Drive folders and files to local folders</li></ul> Normalize <ul><li>Complete normalization of filenames</li> <li>Complete normalization of file types</li> <li>Re-size large files, optimize for web</li> <li>Clean spreadsheets with openrefine</li> </ul> Datafy <ul><li>Create dataset</li> <li>Create a metadata record for each file</li> <li>Populate with OCRd text, labels and other metadata</li> <li>Evaluate license and copyright</li> Deploy <ul><li>Push dataset to Huggingface Hub</li></ul>"},{"location":"workflow/#export","title":"Export","text":"<p><pre><code>flowchart LR\n    a(\"HF Hub\") --&gt; b(\"11ty build\")\n    b --&gt; d(\"site\")</code></pre> @hugginface/hub</p> <p>Requirements </p> <p>Partner shares materials from Drive  Partners can edit and update data in Drive We should work with partners to normalize data (either in Drive or after download?) - partners clean and check by hand - we can clean and check automatically (change filenames)</p> <p>I am not sure that I should add sync.  1. No sync. We fetch all project assets. - we then manage them in a new enviornment - partners need to learn this new enviornment  - we are able to clean and process materials, save them to a proper dataset </p> <ol> <li>Sync. We fetch and update from the cloud</li> <li>partners maintain in familiar env</li> <li> <p>we'd need to clean and process materials in the cloud</p> </li> <li> <p>Two sets. We fetch from the cloud, clean, then push cleaned new version back to cloud, run sync on new version.</p> </li> <li>presumes need to track updates (how often will it change?)</li> <li>partners maintain in familiar env</li> <li>we don't have to pay for storage (new version acts as data store)</li> <li>people will continue to add stuff, and they'll add it where they know</li> </ol> <p>HF Hub - supports data publication - versioning  - documentation  - uses git to differing copies  - advantages of managed cloud db w/o cost</p>"}]}